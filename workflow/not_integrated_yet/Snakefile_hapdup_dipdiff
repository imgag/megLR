samples = ['20110Ia001', '20110Ia002']

rule all:
  input:
    expand("flye_{sample}", sample = samples),
    expand("hapdup_{sample}/haplotype_1.fasta", sample = samples),
    expand("dipdiff_{sample}/variants.vcf", sample = samples),
    "truvari/truvari_collapsed.vcf"

rule flye:
  input:
    "data/{sample}.fastq.gz"
  output:
    "flye_{sample}/assembly.fasta"
  log:
    "{sample}_flye.log"
  conda:
    "flye_env.yaml"
  threads: 70
  shell:
    """
    flye --nano-raw {input} -o {output} --genome-size=2.9G --threads {threads} > {log}
    """

rule map_to_assembly:
  input:
    fq = "data/{sample}.fastq.gz",
    fa = "flye_{sample}/assembly.fasta"
  output:
    bam = "hapdup_{sample}/assembly_aln.bam"
  log:
    "{sample}_map.log"
  conda:
    "minimap2_env.yml"
  threads:
    40
  shell:
     """
     minimap2 -ax map-ont -t {threads} {input.fa} {input.fq} | samtools sort -@ 4 -m 4G > {output.bam}
     samtools index -@ 4 {output.bam}
     """

rule hapdup:
  input:
    bam = "hapdup_{sample}/assembly_aln.bam",
    fa = "flye_{sample}/assembly.fasta"
  output:
    f1 = "hapdup_{sample}/haplotype_1.fasta",
    f2 = "hapdup_{sample}/haplotype_2.fasta"
  log:
    "{sample}_hapdup.log"
  threads:
   40
  shell:
    """
    docker run \
	-v "$(realpath hapdup_{wildcards.sample})":"/mnt/hapdup" \
	-v "$(realpath flye_{wildcards.sample})":"/mnt/assembly" \
	-u `id -u`:`id -g` mkolmogo/hapdup:0.6 \
    	hapdup \
	--assembly /mnt/assembly/assembly.fasta \
	--bam /mnt/hapdup/assembly_aln.bam \
	--out-dir /mnt/hapdup \
	-t {threads} \
	--rtype ont \
	>{log} 2>&1
   """

rule dipdiff:
  input:
    ref = "ref/GRCh38.fa",
    f1 = "hapdup_{sample}/haplotype_1.fasta",
    f2 = "hapdup_{sample}/haplotype_2.fasta"
  output:
    vcf = "dipdiff_{sample}/variants.vcf"
  log:
    "{sample}_dipdiff.log"
  threads:
    30
  shell: 
    """
    docker run \
        -v "$(realpath $(dirname {input.ref}))":"/mnt/ref" \
        -v "$(realpath $(dirname {input.f1}))":"/mnt/hapdup" \
        -v "$(realpath $(dirname {output.vcf}))":"/mnt/output" \
        -u `id -u`:`id -g` mkolmogo/dipdiff:0.3 \
        dipdiff.py \
        --reference "/mnt/ref/$(basename {input.ref})" \
        --pat "/mnt/hapdup/haplotype_1.fasta" \
        --mat "/mnt/hapdup/haplotype_2.fasta" \
        --out-dir /mnt/output \
        -t {threads} \
        >{log} 2>&1
    """

rule process_variants:
  input:
    vcf = "dipdiff_{sample}/variants.vcf"
  output:
    filtered = "structural_variants/{sample}.filtered.vcf",
    sorted = "structural_variants/{sample}.sorted.vcf",
    compressed = "structural_variants/{sample}.vcf.gz"
  threads:
    1
  conda:
    "truvari_env.yml"
  params:
    coregenome="ref/WGS_grch38.bed"
  shell:
    """
    VcfFilter -in {input} -out {output.filtered} -reg {params.coregenome}
    VcfSort -in {output.filtered} -out {output.sorted}
    bgzip -c {output.sorted}  > {output.compressed}
    tabix {output.compressed}
    """

rule merge_vcf:
  input:
    vcf = expand("structural_variants/{sample}.vcf.gz", sample = samples),
    ref = "ref/GRCh38.fa"
  output:
    merge = "truvari/merge.vcf.gz",
    truvari = "truvari/truvari_merge.vcf",
    collapse = "truvari/truvari_collapsed.vcf"
  log:
    "truvari.log"
  conda:
    "truvari_env.yml"
  threads:
    10
  shell:
    """
    bcftools merge -m none --force-samples {input.vcf} | bgzip > {output.merge}
    tabix {output.merge}
    /home/caspar/miniconda3/bin/truvari collapse -i {output.merge} -o {output.truvari} -c {output.collapse} -f {input.ref}
    """
