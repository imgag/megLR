rule flye:
  input:
    "data/{sample}.fastq.gz"
  output:
    "flye_{sample}/assembly.fasta"
  log:
    "{sample}_flye.log"
  conda:
    "flye_env.yaml"
  threads: 70
  shell:
    """
    flye --nano-raw {input} -o {output} --genome-size=2.9G --threads {threads} > {log}
    """

rule initialize_first_round:
    input:
        "flye_{sample}/assembly.fasta"
    output:
        "racon_polishing/{sample}_round0.fasta"
    shell:
        """
        cp {input} {output}
        """

rule merge_reads:
    input:
        fq1 = "data/{sample}_04_R1.fastq.gz",
        fq2 = "data/{sample}_04_R2.fastq.gz"
    output:
        "data/{sample}.sr_merged.fastq"
    shell:
        """	
        zcat {input.fq1} {input.fq2} | tr -d ' ' > {output}	
        """

rule map_sr:
    input:
        fa = "racon_polishing/{sample}_round{r}.fasta",
        fq = "data/{sample}.sr_merged.fastq"
    output:
        sam = "racon_polishing/{sample}_round{r}.sam"
    conda:
        "minimap2_env.yml"
    log:
        "log/{sample}_{r}_map_plasmid.log"
    threads:
	      20
    shell:
        """
        minimap2 -ax sr {input.fa} {input.fq} > {output}
        """

rule polish_plasmid:
    input:
        bam = "racon_polishing/{sample}_round{r}.sam",
        fq = "data/{sample}.sr_merged.fastq",
        fa = "racon_polishing/{sample}_round{r}.fasta"
    output:
        fa = "racon_polishing/{sample}_round{r}.polished.fasta"
    group:
        "polish"
    conda:
        "racon_env.yml"
    log:
        "log/{sample}_{r}_polish_plasmid.log"
    params:
        chunk_size = 200000000
    threads:
        30
    shell:
        """
        racon_wrapper \
        --threads {threads} \
        --include-unpolished \
        --split {params.chunk_size} \
        {input.fq} {input.bam} {input.fa} \
        > {output.fa} 2> {log}
        """
    
rule rename_polished_fasta:
    input:
        lambda wildcards: "racon_polishing/" + wildcards.sample + "_round" + str(int(wildcards.r)-1) + ".polished.fasta"
    output:
        "racon_polishing/{sample}_round{r}.fasta"
    group:
        "polish"
    shell:
        """
        mv {input} {output}
        """